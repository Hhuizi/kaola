// 是 css 预编译器;
// 目的 还是写 css;
// 变量 ; 函数 ; 逻辑 ; 色值运算; 
@import "_mixin.scss";
@import "_function.scss";
// 变量;
$color:#ddd;
// body{
//     background: $color; 
//     color:$color;
// }

// sass 完整支持css ; 
// css 可以随意的卸载sass文件里 ;

// .box1{
//     background:$color;
// }
// .box2{
//     background:$color;
// }
// .box3{
//     background:$color;
// }

// sass 哪里好 ?;
body{
    background: $color + 10; 
    color:$color;
}

// 混合 mixin ;

// @mixin transform{
//     -webkit-transform: rotate(30deg);
//     -ms-transform: rotate(30deg);
//     -o-transform: rotate(30deg);
//     -moz-transform: rotate(30deg);
//     transform: rotate(30deg);
// }
// .box{
//     width: 100px;
//     height: 100px;
//     background: #001;
//     @include transform();
//     font-size: 100px;
// }

// .box2{
//     width: 200px;
//     height: 200px;
//     background: yellowgreen;@include transform();
// }

// @mixin 传参;

// .box{
//     width: 100px;
//     height: 100px;
//     background: #001;
//     @include transform(rotate(30deg));
//     font-size: 100px;
//     @include transition;
// }

// .box2{
//     width: 200px;
//     height: 200px;
//     background: yellowgreen; @include transform(rotate(60deg));
   
// }

// 函数;
// .box{
//     width: 100px;
//     height: 100px;
//     background: #000;
// }
html{
    font-size: $rootSize;
}
.box2{
    width: pxToRem(100px);
    height: pxToRem(100px);
    background: yellowgreen;
} 

// .box{
//     span{
//         color:yellowgreen;
//     }
// }
.box{
    width: 100px;
    height: 100px;
    background: #000;
    @include transition;

    span{
        color:yellowgreen;
    }
    strong{
        color:antiquewhite;
        text-align: center;
    }
    &:hover{
        @include transform(rotate(180deg));
    }
}
// 很有趣的东西; 循环;

// sass 里面的数组; 符合变量;

// $list : 10px 20px;

// // sass给我们提供了非常多的方法;

// // nth();
// .box{
//     span{
//         font-size: nth($list , 2);
//     }
// }

// 复杂数组;

// $list : (box1 10px) (box2 15px) (box3 20px) (box4 30px) (box5 40px);

// .box {
//     span{
//         font-size: nth(nth($list , 1),2)
//     }
// }

// @each $class,$size in $list {
//     .#{$class}{
//         font-size: $size;
//     }
// }

// @at-root;

// 跳出包围;

// .box{
//     span{
//         font-size: 10px;
//         @at-root strong {
//             font-size : 20px;
//         }
//     }
// }

.sidebar {
    width: 300px;
    @media screen and (max-width:400px) {
      width: 500px;
    }
  }

  // @extend 继承;
.box2{
    @extend .box;
}